{"version":3,"sources":["Components/Input.js","Components/Message.js","Components/MessageDisplay.js","Components/OnlineUsers.js","App.js","reportWebVitals.js","index.js"],"names":["Input","setMessage","sendMessage","message","className","type","placeholder","value","onKeyPress","event","key","onChange","target","onClick","Message","name","text","color","date","useCookies","sentByUser","nickname","style","fontWeight","MessageDisplay","messages","messagesEndRef","users","useRef","useEffect","current","scrollIntoView","behavior","map","id","ref","OnlineUsers","socket","io","transports","App","useState","setUsers","setMessages","cookies","setCookie","emit","off","on","username","user","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0049126a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Input.css\"\n\nexport default function Input({setMessage, sendMessage, message}) {\n\n    return (\n        <form className=\"formBox\">\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Type here to chat\" value={message}\n                   onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n                   onChange={({target: {value}}) => setMessage(value)}\n            />\n            <button className=\"sendButton\" onClick={event => sendMessage(event)}>SEND</button>\n        </form>\n    );\n}","import React from \"react\";\nimport {useCookies} from \"react-cookie\";\nimport \"./Message.css\"\n\nconst Message = ({name, text, color, date}) => {\n    const [cookies] = useCookies([\"nickname\"]);\n\n    let sentByUser = false;\n    if (name === cookies.nickname) {\n        sentByUser = true;\n    }\n    if (typeof (name) !== \"string\") {\n        name = \"ERROR\"\n    }\n    if (typeof (text) !== \"string\") {\n        text = \"ERROR\"\n    }\n    if (typeof (date) !== \"string\") {\n        date = \"ERROR\"\n    }\n\n    return (\n        <div className=\"message\">\n            <div className=\"time\">\n                {date}\n            </div>\n            <div className=\"user\" style={{color: color}}>\n                {name + \":\"}\n            </div>\n            <div className=\"text\" style={sentByUser ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}>\n                {text}\n            </div>\n        </div>\n    );\n};\n\nexport default Message;","import React, {useEffect, useRef} from \"react\";\nimport Message from \"./Message\";\n\nexport default function MessageDisplay({messages, users}) {\n    const messagesEndRef = useRef(null)\n\n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"})\n    }\n\n    useEffect(scrollToBottom, [messages]);\n\n    return (\n        <>\n            <div className=\"Title\">\n                Messages:\n            </div>\n            <div className=\"MessageBox\">\n                {messages.map(message => <Message key={message.id + message.text + message.date}  {...message} />)}\n                <div ref={messagesEndRef}/>\n            </div>\n        </>\n    )\n}","import React from \"react\";\n\nconst OnlineUsers = ({users}) => {\n\n    return (\n        <div className='OnlineUsers'>\n            <div className=\"Title\">\n                Users:\n            </div>\n            <div>\n                {users.map(({name}) => (\n                    <div key={name}>\n                        {name}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default OnlineUsers;","import React, {useEffect, useState} from \"react\";\nimport io from 'socket.io-client';\nimport Input from \"./Components/Input\";\nimport MessageDisplay from \"./Components/MessageDisplay\";\nimport OnlineUsers from \"./Components/OnlineUsers\";\nimport {useCookies} from \"react-cookie\";\nimport \"./App.css\"\n\nlet socket = io(\n    'localhost:4001',\n    {\n        transports: ['websocket']\n    });\n\nconst App = () => {\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [cookies, setCookie] = useCookies([\"nickname\"]);\n\n    useEffect(() => {\n        socket.emit(\"join\", cookies.nickname);\n\n        return () => {\n            socket.off(\"join\")\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    useEffect(() => {\n        socket.on(\"getCached\", messages => {\n                setMessages(messages);\n            }\n        );\n\n        return () => {\n            socket.off(\"getCached\");\n        }\n    });\n\n    useEffect(() => {\n        socket.on(\"updateUser\", username => {\n            setCookie(\"nickname\", username)\n        })\n        return () => {\n            socket.off(\"updateUser\")\n        }\n    }, [setCookie]);\n\n\n    useEffect(() => {\n        socket.on(\"users\", users => {\n            setUsers(users);\n        });\n        return () => {\n            socket.off(\"users\")\n        }\n    });\n\n\n    useEffect(() => {\n        socket.on(\"getMsg\", message => {\n            //FUNCTIONAL UPDATE VERY IMPORTANT\n            message.user = true\n            message.color =\n                setMessages([...messages, message])\n        });\n        return () => {\n            socket.off(\"getMsg\")\n        }\n    });\n\n\n    const sendMessage = event => {\n        if (message !== \"\") {\n            event.preventDefault()\n            socket.emit(\"sendMsg\", message);\n            setMessage(\"\")\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"Apptitle\">Daniel's Chat App ðŸ“ƒ</div>\n            <div className=\"break\"/>\n            <div className=\"ChatGrid\">\n                <div className=\"ChatComponents\">\n                    <MessageDisplay messages={messages} users={users}/>\n                    <Input message={message} sendMessage={sendMessage} setMessage={setMessage}/>\n                </div>\n                <OnlineUsers users={users} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}